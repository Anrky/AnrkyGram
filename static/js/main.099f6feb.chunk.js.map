{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","style","backgroundImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.099f6feb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>AnrkyGram</h1>\n      <h2>Image Gallery</h2>\n      <p>Add you own images to  this gallery</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyATvGz19F4IH5pGNKJKuQnkt4U9ozH4Ofs\",\r\n    authDomain: \"anrkygram.firebaseapp.com\",\r\n    projectId: \"anrkygram\",\r\n    storageBucket: \"anrkygram.appspot.com\",\r\n    messagingSenderId: \"1069413817718\",\r\n    appId: \"1:1069413817718:web:614e51a21166966157ae57\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export {projectStorage, projectFirestore, timestamp};","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images');\r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt = timestamp();\r\n      await collectionRef.add({ url, createdAt });\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        { error && <div className=\"error\">{ error }</div>}\r\n        { file && <div>{ file.name }</div> }\r\n        { file && <ProgressBar file={file} setFile={setFile} /> }\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(snap => {\r\n        let documents = [];\r\n        snap.forEach(doc => {\r\n          documents.push({...doc.data(), id: doc.id});\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs && docs.map(doc => (\r\n        <motion.div className=\"img-wrap\" key={doc.id} \r\n          layout\r\n          whileHover={{ opacity: 1 }}s\r\n          onClick={() => setSelectedImg(doc.url)}\r\n        >\r\n          <motion.img src={doc.url} alt=\"uploaded pic\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1 }}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\" style={{ \n      backgroundImage: `url(\"https://img.freepik.com/free-vector/white-abstract-background_23-2148810113.jpg?size=626&ext=jpg\")` \n    }}>\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}